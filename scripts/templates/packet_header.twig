#pragma once

#include "{{extends_path}}/{{extends_header_filename}}.h"

using {{extends_class_namespace}}::{{extends_class_name}};

namespace OpenPST {
    namespace {{namespace}} {
        
        class {{class_name}} : public {{extends_class_name}}
        {
            public:
                /**
                * @brief Constructor
                */
                {{class_name}}();
                
                /**
                * @brief Destructor
                */
                ~{{class_name}}();

{% for field in fields %}
{% include 'method_get_declaration.twig' with {
    'field_type'  : field.field_type,
	'field_size'  : field.field_size,
	'field_name'  : field.field_name,
	'field_name_camel'  : field.field_name_camel,
	'field_name_lower_camel'  : field.field_name_lower_camel,
	'field_size_cost'  : field.size_cost,
	'field_allowed_setters' : field.allowed_setters,
	'field_allowed_getters' : field.allowed_getters
} %}
                
{% include 'method_set_declaration.twig' with {
    'field_type'  : field.field_type,
	'field_size'  : field.field_size,
	'field_name'  : field.field_name,
	'field_name_camel'  : field.field_name_camel,
	'field_name_lower_camel'  : field.field_name_lower_camel,
	'field_size_cost'  : field.size_cost,
	'field_allowed_setters' : field.allowed_setters,
	'field_allowed_getters' : field.allowed_getters
} %}
{% endfor %}

        };
    }
}
